function SnakeGame.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
call Snake.new 0
pop this 0
push constant 5
pop this 3
push this 3
push constant 20
call Math.multiply 2
push this 3
push constant 20
call Math.multiply 2
push this 3
call Square.new 3
pop this 1
push constant 1
pop this 2
push constant 11
pop this 4
push pointer 0
return
function SnakeGame.run 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
not
not
if-goto WHILE_END0
call Keyboard.keyPressed 0
pop local 0
push local 0
push constant 81
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 1
push constant 0
return
label IF_FALSE0
push local 0
push constant 131
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
push constant 4
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 3
pop this 2
label IF_FALSE2
label IF_FALSE1
push local 0
push constant 133
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 2
push constant 3
eq
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 4
pop this 2
label IF_FALSE4
label IF_FALSE3
push local 0
push constant 130
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 2
push constant 1
eq
not
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 2
pop this 2
label IF_FALSE6
label IF_FALSE5
push local 0
push constant 132
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 2
push constant 2
eq
not
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 1
pop this 2
label IF_FALSE8
label IF_FALSE7
push pointer 0
call SnakeGame.move 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function SnakeGame.dispose 0
push argument 0
pop pointer 0
push this 0
call Snake.dispose 1
pop temp 0
push this 1
call Square.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function SnakeGame.move 1
push argument 0
pop pointer 0
push this 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call Snake.moveRight 1
pop temp 0
label IF_FALSE0
push this 2
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
call Snake.moveLeft 1
pop temp 0
label IF_FALSE1
push this 2
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
call Snake.moveUp 1
pop temp 0
label IF_FALSE2
push this 2
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
call Snake.moveDown 1
pop temp 0
label IF_FALSE3
push this 0
push this 1
call Square.getX 1
push this 1
call Square.getY 1
call Snake.overlapAnother 3
pop local 0
push local 0
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
call SnakeGame.placeFood 1
pop temp 0
push this 0
call Snake.grow 1
pop temp 0
push this 4
push constant 1
add
pop this 4
label IF_FALSE4
push constant 70
call Sys.wait 1
pop temp 0
push constant 0
return
function SnakeGame.placeFood 4
push argument 0
pop pointer 0
push constant 0
not
pop local 0
label WHILE_EXP0
push local 0
not
if-goto WHILE_END0
push pointer 0
push this 4
call Rand.rand 1
push constant 510
push this 3
sub
push constant 1
sub
call SnakeGame.mod 3
push this 3
call Math.divide 2
pop local 1
push pointer 0
push this 4
push constant 3
add
call Rand.rand 1
push constant 254
push this 3
sub
push constant 1
sub
call SnakeGame.mod 3
push this 3
call Math.divide 2
pop local 2
push this 0
push local 1
push this 3
call Math.multiply 2
push local 2
push this 3
call Math.multiply 2
call Snake.overlapAnother 3
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push this 3
call Math.multiply 2
push local 2
push this 3
call Math.multiply 2
push this 3
call Square.new 3
pop local 3
push constant 0
pop local 0
label IF_FALSE0
push this 4
push constant 1
add
pop this 4
goto WHILE_EXP0
label WHILE_END0
push local 3
pop this 1
push constant 0
return
function SnakeGame.mod 0
push argument 0
pop pointer 0
push argument 1
push argument 1
push argument 2
call Math.divide 2
push argument 2
call Math.multiply 2
sub
return
