function Snake.new 3
push constant 8
call Memory.alloc 1
pop pointer 0
push constant 20
pop this 3
push constant 0
pop this 2
push constant 5
pop this 1
push this 3
call Array.new 1
pop this 0
push constant 0
pop local 0
push constant 0
pop this 6
push constant 0
pop this 7
label WHILE_EXP0
push local 0
push this 3
lt
not
if-goto WHILE_END0
push local 0
push this 1
call Math.multiply 2
pop local 2
push local 0
push this 0
add
push local 2
push constant 0
push this 1
call Square.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Snake.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 3
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Square.erase 1
pop temp 0
push local 1
call Square.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Snake.grow 0
push argument 0
pop pointer 0
push constant 0
not
pop this 7
push this 3
push constant 1
add
pop this 3
push constant 0
return
function Snake.prepMove 6
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 0
push this 0
add
pop pointer 1
push that 0
pop local 2
push local 2
call Square.getX 1
pop local 4
push local 2
call Square.getY 1
pop local 5
push local 2
call Square.getSize 1
pop this 1
push this 7
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push local 4
push local 5
push local 4
push this 1
add
push local 5
push this 1
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
label WHILE_EXP0
push local 1
push this 3
push constant 1
sub
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
push local 1
push constant 1
add
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push this 3
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
pop local 3
goto IF_END0
label IF_FALSE0
push this 3
call Array.new 1
pop local 0
label WHILE_EXP1
push local 1
push this 3
push constant 1
sub
lt
not
if-goto WHILE_END1
push local 1
push local 0
add
push local 1
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
pop this 0
push this 3
push constant 2
sub
push this 0
add
pop pointer 1
push that 0
pop local 3
label IF_END0
push local 3
call Square.getX 1
pop this 4
push local 3
call Square.getY 1
pop this 5
push constant 0
return
function Snake.moveUp 0
push argument 0
pop pointer 0
push pointer 0
call Snake.prepMove 1
pop temp 0
push this 5
push constant 1
gt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Sys.halt 0
pop temp 0
label IF_FALSE0
push this 3
push constant 1
sub
push this 0
add
push this 4
push this 5
push this 1
sub
push this 1
call Square.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Snake.overlap 1
pop this 6
push this 6
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
call Sys.halt 0
pop temp 0
label IF_FALSE1
push constant 0
return
function Snake.moveDown 0
push argument 0
pop pointer 0
push pointer 0
call Snake.prepMove 1
pop temp 0
push this 5
push this 1
add
push constant 254
lt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Sys.halt 0
pop temp 0
label IF_FALSE0
push this 3
push constant 1
sub
push this 0
add
push this 4
push this 5
push this 1
add
push this 1
call Square.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Snake.overlap 1
pop this 6
push this 6
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
call Sys.halt 0
pop temp 0
label IF_FALSE1
push constant 0
return
function Snake.moveLeft 0
push argument 0
pop pointer 0
push pointer 0
call Snake.prepMove 1
pop temp 0
push this 4
push constant 1
gt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Sys.halt 0
pop temp 0
label IF_FALSE0
push this 3
push constant 1
sub
push this 0
add
push this 4
push this 1
sub
push this 5
push this 1
call Square.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Snake.overlap 1
pop this 6
push this 6
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
call Sys.halt 0
pop temp 0
label IF_FALSE1
push constant 0
return
function Snake.moveRight 0
push argument 0
pop pointer 0
push pointer 0
call Snake.prepMove 1
pop temp 0
push this 4
push this 1
add
push constant 510
lt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Sys.halt 0
pop temp 0
label IF_FALSE0
push this 3
push constant 1
sub
push this 0
add
push this 4
push this 1
add
push this 5
push this 1
call Square.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Snake.overlap 1
pop this 6
push this 6
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
call Sys.halt 0
pop temp 0
label IF_FALSE1
push constant 0
return
function Snake.overlap 6
push argument 0
pop pointer 0
push this 3
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
pop local 5
push local 5
call Square.getX 1
pop this 4
push local 5
call Square.getY 1
pop this 5
push constant 0
pop local 1
push constant 0
pop local 0
label WHILE_EXP0
push local 1
push this 3
push constant 1
sub
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 2
push local 2
call Square.getX 1
pop local 3
push local 2
call Square.getY 1
pop local 4
push this 4
push local 3
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 5
push local 4
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 0
push local 0
return
label IF_FALSE1
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Snake.overlapAnother 5
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 0
pop local 0
label WHILE_EXP0
push local 1
push this 3
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 2
push local 2
call Square.getX 1
pop local 3
push local 2
call Square.getY 1
pop local 4
push argument 1
push local 3
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 2
push local 4
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 0
push local 0
return
label IF_FALSE1
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
