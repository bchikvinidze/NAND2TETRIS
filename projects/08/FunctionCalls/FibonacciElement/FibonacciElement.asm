@256
D=A
@SP
M=D
@RetAddrLabel_Sys.init
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(RetAddrLabel_Sys.init)
(Main.fibonacci)
@0
D=A
@COUNTER_Main.fibonacci
M=D
(LOOP_Main.fibonacci)
@COUNTER_Main.fibonacci
D=M
@LOOPEND_Main.fibonacci
D;JEQ
@COUNTER_Main.fibonacci
M=M-1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LOOP_Main.fibonacci
0;JMP
(LOOPEND_Main.fibonacci)
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
A=A-1
D=D-M
M=-1
@LT0
D;JLE
@NEXT0
0;JMP
(LT0)
@SP
A=M-1
M=0
(NEXT0)
@SP
M=M-1
A=M
D=M
@IF_TRUEMain.vm
D;JNE
@IF_FALSEMain.vm
0;JMP
(IF_TRUEMain.vm)
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@ENDFRAME
M=D
D=M
@5
D=D-A
A=D
D=M
@RetAddr0
M=D
@ARG
D=M
@IND0
M=D
@SP
M=M-1
A=M
D=M
@IND0
A=M
M=D
@ARG
D=M+1
@SP
M=D
@ENDFRAME
D=M-1
A=D
D=M
@THAT
M=D
@2
D=A
@ENDFRAME
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@ENDFRAME
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@ENDFRAME
D=M-D
A=D
D=M
@LCL
M=D
@RetAddr0
A=M
0;JMP
(IF_FALSEMain.vm)
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=D
@RetAddrLabel_Main.fibonacci0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(RetAddrLabel_Main.fibonacci0)
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=D
@RetAddrLabel_Main.fibonacci1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(RetAddrLabel_Main.fibonacci1)
@SP
M=M-1
A=M
D=M
A=A-1
D=D+M
M=D
@LCL
D=M
@ENDFRAME
M=D
D=M
@5
D=D-A
A=D
D=M
@RetAddr2
M=D
@ARG
D=M
@IND2
M=D
@SP
M=M-1
A=M
D=M
@IND2
A=M
M=D
@ARG
D=M+1
@SP
M=D
@ENDFRAME
D=M-1
A=D
D=M
@THAT
M=D
@2
D=A
@ENDFRAME
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@ENDFRAME
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@ENDFRAME
D=M-D
A=D
D=M
@LCL
M=D
@RetAddr2
A=M
0;JMP
(Sys.init)
@0
D=A
@COUNTER_Sys.init
M=D
(LOOP_Sys.init)
@COUNTER_Sys.init
D=M
@LOOPEND_Sys.init
D;JEQ
@COUNTER_Sys.init
M=M-1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LOOP_Sys.init
0;JMP
(LOOPEND_Sys.init)
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
@RetAddrLabel_Main.fibonacci2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(RetAddrLabel_Main.fibonacci2)
(WHILESys.vm)
@WHILESys.vm
0;JMP
